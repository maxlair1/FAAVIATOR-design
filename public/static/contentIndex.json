{"Button":{"title":"Button","links":[],"tags":[],"content":"Interactive backbone element of any application. Used for navigation, actions, and confirmations.\n \nSwiftUI\n"},"Icons":{"title":"Icons","links":[],"tags":[],"content":"The icons that Faaviator uses are from an open-source and versatile icon pack called Iconoir\nUse\n\nCustomIconView(.iconoir(.icon), size: size, color: .color)\nCustomIconView(.system(.icon), size: size, color: .color)\nAccepts both .iconoir() and the default .system() (apple icons)`\nUse the CustomIcon in\nUse the CustomIconView alone\nimport SwiftUI  \nimport Iconoir\n \nstruct ContentView: View {  \n    var body: some View {  \n        VStack(spacing: 20) {\n          \n            // Using an SF Symbol\n            CustomIconView(.system(&quot;star.fill&quot;), size: 30, color:.textPrimary)            \n            // Using an Iconoir icon  \n            CustomIconView(.iconoir(.bell), size: 40, color: .red)            \n            \n            // Using another Iconoir icon with default size and color  \n            CustomIconView(.iconoir(.addUser))            \n            \n            // You can also use it inline with other views  \n            HStack {  \n                Text(&quot;Notifications&quot;)  \n                CustomIconView(.iconoir(.bell), size: 20, color: .green)  \n            }  \n        }  \n    }  \n}\nInstall\n\nAdding to SwiftUI\nFirst we need to install the Iconoir Swift Package to the project.\n\nOur custom enum and view\nimport Foundation\nimport SwiftUI\nimport Iconoir\n \nenum CustomIcon {\n    case system(String)\n    case iconoir(Iconoir)\n}\n \nstruct CustomIconView: View {\n    let icon: CustomIcon\n    let size: CGFloat\n    let color: Color\n    \n    init(_ icon: CustomIcon, size: CGFloat = 24, color: Color = .TextPrimary) {\n        self.icon = icon\n        self.size = size\n        self.color = color\n    }\n    \n    var body: some View {\n        switch icon {\n        case .system(let name):\n            Image(systemName: name)\n                .font(.system(size: size))\n                .foregroundColor(color)\n        case .iconoir(let iconoir):\n            iconoir.asImage\n                .font(.system(size: size))\n                .foregroundColor(color)\n        }\n    }\n}\nDesign\n\nBrowse the catalog of icons at Iconoir.com\nView the Figma components below\nFigma\n"},"Welcome-to-FAAVIATOR-Design-System":{"title":"Welcome to FAAVIATOR Design System","links":[],"tags":[],"content":"This is where all components, design conventions, and assets are documented.\nFor the first version of this doc, I want to document out purely the SwiftUI components/styles\nTable of Contents"},"index":{"title":"index","links":[],"tags":[],"content":"This is a test"}}